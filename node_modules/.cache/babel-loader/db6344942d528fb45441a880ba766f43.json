{"ast":null,"code":"import React from\"react\";import{FormContainer,FoodInput,Button,Select}from\"./HeaderStyles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Form=function Form(_ref){var setQuery=_ref.setQuery,getData=_ref.getData,mealTypes=_ref.mealTypes,setMeal=_ref.setMeal;var handleSubmit=function handleSubmit(e){e.preventDefault();//  Normal şartlarda search linkine tıklandığında, form gönderilir, (breakfast tıklanmış gibi). biz aşağıdaki şekilde bir yapı kullanırsak ve tıklanma olayında e.preventDefault(); dersek  nesnenin o anki işlevini iptal edip devamında kod varsa işlemeye devam edecektir alttaki örneğimizde görüldüğü gibi e.preventDefault() satırından sonra ki kod satırlarına geçer\ngetData();// mantıken buraya yazılmalı, butona da yazarsak  api yi 2 kere çağırmış oluyor. console da burası açıkken bak\n};return/*#__PURE__*/ (/* 3 arama kutusunun toplandığı kutu */_jsxs(FormContainer,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(FoodInput,{type:\"text\",placeholder:\"Search\",onChange:function onChange(e){return setQuery(e.target.value);}}),/*#__PURE__*/_jsx(Button,{type:\"submit\"// onClick={getData} yazarsak 2 kere veri getirir. zaten bu buton submit işlemi yapacak ve form un onsubmit ini tetikleyecek\n,children:\"Search\"}),/*#__PURE__*/_jsx(Select,{name:\"mealTypes\",id:\"mealTypes\",onChange:function onChange(e){return setMeal(e.target.value);},children:mealTypes.map(function(item,index){return/*#__PURE__*/_jsx(\"option\",{value:item.toLowerCase(),children:item},index);})})]}));};export default Form;","map":{"version":3,"sources":["/Users/adm5/Desktop/recipe-2/src/components/header/Form.jsx"],"names":["React","FormContainer","FoodInput","Button","Select","Form","setQuery","getData","mealTypes","setMeal","handleSubmit","e","preventDefault","target","value","map","item","index","toLowerCase"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,CAAwBC,SAAxB,CAAmCC,MAAnC,CAA2CC,MAA3C,KAAyD,gBAAzD,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAA+C,IAA5CC,CAAAA,QAA4C,MAA5CA,QAA4C,CAAlCC,OAAkC,MAAlCA,OAAkC,CAAzBC,SAAyB,MAAzBA,SAAyB,CAAdC,OAAc,MAAdA,OAAc,CAC1D,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACA;AACAL,OAAO,GAEP;AACD,CAND,CAQA,oBACE,wCACA,MAAC,aAAD,EAAe,QAAQ,CAAEG,YAAzB,wBACE,KAAC,SAAD,EACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,QAFd,CAGE,QAAQ,CAAE,kBAACC,CAAD,QAAOL,CAAAA,QAAQ,CAACK,CAAC,CAACE,MAAF,CAASC,KAAV,CAAf,EAHZ,EADF,cAOE,KAAC,MAAD,EACE,IAAI,CAAC,QAEL;AAHF,oBAPF,cAeE,KAAC,MAAD,EACE,IAAI,CAAC,WADP,CAEE,EAAE,CAAC,WAFL,CAGE,QAAQ,CAAE,kBAACH,CAAD,QAAOF,CAAAA,OAAO,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd,EAHZ,UAMGN,SAAS,CAACO,GAAV,CAAc,SAACC,IAAD,CAAOC,KAAP,qBACb,eAAoB,KAAK,CAAED,IAAI,CAACE,WAAL,EAA3B,UACGF,IADH,EAAaC,KAAb,CADa,EAAd,CANH,EAfF,GAFF,EA+BD,CAxCD,CA0CA,cAAeZ,CAAAA,IAAf","sourcesContent":["import React from \"react\";\nimport { FormContainer, FoodInput, Button, Select } from \"./HeaderStyles\";\n\nconst Form = ({ setQuery, getData, mealTypes, setMeal }) => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //  Normal şartlarda search linkine tıklandığında, form gönderilir, (breakfast tıklanmış gibi). biz aşağıdaki şekilde bir yapı kullanırsak ve tıklanma olayında e.preventDefault(); dersek  nesnenin o anki işlevini iptal edip devamında kod varsa işlemeye devam edecektir alttaki örneğimizde görüldüğü gibi e.preventDefault() satırından sonra ki kod satırlarına geçer\n    getData();\n\n    // mantıken buraya yazılmalı, butona da yazarsak  api yi 2 kere çağırmış oluyor. console da burası açıkken bak\n  };\n\n  return (\n    /* 3 arama kutusunun toplandığı kutu */\n    <FormContainer onSubmit={handleSubmit}>\n      <FoodInput\n        type=\"text\"\n        placeholder=\"Search\"\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      {/* arama yapılacak ürünün yazıldığı input */}\n      <Button\n        type=\"submit\"\n\n        // onClick={getData} yazarsak 2 kere veri getirir. zaten bu buton submit işlemi yapacak ve form un onsubmit ini tetikleyecek\n      >\n        Search\n      </Button>\n      {/* ya butona tıklayınca getdata çalıştırsın ya form u handlesubmit e yolla, butonu handlesubmit e yollasanda olur */}\n      <Select\n        name=\"mealTypes\"\n        id=\"mealTypes\"\n        onChange={(e) => setMeal(e.target.value)}\n      >\n        {/* onChange ile setMeal e attım option la browser da göstereceğiz */}\n        {mealTypes.map((item, index) => (\n          <option key={index} value={item.toLowerCase()}>\n            {item}\n          </option>\n        ))}\n      </Select>\n    </FormContainer>\n  );\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}