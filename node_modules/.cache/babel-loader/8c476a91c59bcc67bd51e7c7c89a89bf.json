{"ast":null,"code":"var _jsxFileName = \"/Users/adm5/Desktop/recipe_ashley/src/pages/details/Details.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { DetailContainer, DetailPart, HeaderContainer, ImgContainer, OtherPart, IngredContainer } from './DetailsStyles';\nimport dietSvg from \"../../assets/diet.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Details = () => {\n  _s();\n\n  const location = useLocation();\n  const recipe = location.state.recipe1;\n  console.log(recipe);\n  return /*#__PURE__*/_jsxDEV(DetailContainer, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: recipe.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: dietSvg,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DetailPart, {\n      children: [/*#__PURE__*/_jsxDEV(OtherPart, {\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Nutrients\"\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [recipe.totalNutrients.CA.label, \" :\", Math.round(recipe.totalNutrients.CA.quantity), recipe.totalNutrients.CA.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [recipe.totalNutrients.CHOCDF.label, \" :\", Math.round(recipe.totalNutrients.CHOCDF.quantity), recipe.totalNutrients.CHOCDF.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [recipe.totalNutrients.CHOLE.label, \" :\", \" \", Math.round(recipe.totalNutrients.CHOLE.quantity), recipe.totalNutrients.CHOLE.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [recipe.totalNutrients.ENERC_KCAL.label, \" :\", \" \", Math.round(recipe.totalNutrients.ENERC_KCAL.quantity), recipe.totalNutrients.ENERC_KCAL.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recipe.totalWeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Calories: \", Math.round(recipe.calories)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), recipe.digest.slice(0, 4).map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [item.label, \" : \", Math.round(item.total)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ImgContainer, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(IngredContainer, {\n        children: recipe.ingredientLines.map((malzeme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [index + 1, \" -->  \\\" \\\" \", malzeme]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Details, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/adm5/Desktop/recipe_ashley/src/pages/details/Details.jsx"],"names":["React","useLocation","DetailContainer","DetailPart","HeaderContainer","ImgContainer","OtherPart","IngredContainer","dietSvg","Details","location","recipe","state","recipe1","console","log","label","totalNutrients","CA","Math","round","quantity","unit","CHOCDF","CHOLE","ENERC_KCAL","totalWeight","calories","digest","slice","map","item","index","total","image","ingredientLines","malzeme"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { DetailContainer, DetailPart, HeaderContainer, ImgContainer, OtherPart, IngredContainer} from './DetailsStyles';\nimport dietSvg from \"../../assets/diet.svg\";\nconst Details = () => {\nconst location = useLocation();\n\n const recipe = location.state.recipe1\n\n console.log(recipe);\n\n\n\n  return (\n    \n    <DetailContainer>\n\n    <HeaderContainer>\n      <h1>{recipe.label}</h1>\n      <img src={dietSvg} alt=\"\" />\n    </HeaderContainer>\n    <DetailPart>\n    <OtherPart>\n    <>Nutrients</>\n          <p>\n            {recipe.totalNutrients.CA.label} :\n            {Math.round(recipe.totalNutrients.CA.quantity)}\n            {recipe.totalNutrients.CA.unit}\n          </p>\n          <p>\n            {recipe.totalNutrients.CHOCDF.label} :\n            {Math.round(recipe.totalNutrients.CHOCDF.quantity)}\n            {recipe.totalNutrients.CHOCDF.unit}\n          </p>\n          <p>\n            {recipe.totalNutrients.CHOLE.label} :{\" \"}\n            {Math.round(recipe.totalNutrients.CHOLE.quantity)}\n            {recipe.totalNutrients.CHOLE.unit}\n          </p>\n          <p>\n            {recipe.totalNutrients.ENERC_KCAL.label} :{\" \"}\n            {Math.round(recipe.totalNutrients.ENERC_KCAL.quantity)}\n            {recipe.totalNutrients.ENERC_KCAL.unit}\n          </p>\n          <p>{recipe.totalWeight}</p>\n          <p>Calories: {Math.round(recipe.calories)}</p>\n          {recipe.digest.slice(0, 4).map((item, index) => (\n            <p key={index}>\n              {item.label} : {Math.round(item.total)}\n            </p>\n          ))}\n    </OtherPart>\n    <ImgContainer>\n    \n    <img src={recipe.image} alt=\"\" />\n    \n    </ImgContainer>\n    <IngredContainer>\n    {recipe.ingredientLines.map((malzeme, index) => (\n            <div key={index}>\n              <p>\n                {index + 1} -->  \" \" {malzeme}\n                {/* ingredientLines içinde bir sürü obje var tek tek yazdır, başına no ekle 1*{malzeme} gibi */}\n              </p>\n            </div>\n          ))}\n    </IngredContainer>\n\n\n    </DetailPart>\n  </DetailContainer>\n\n  )\n}\n\nexport default Details"]},"metadata":{},"sourceType":"module"}