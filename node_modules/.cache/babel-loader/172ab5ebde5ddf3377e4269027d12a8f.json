{"ast":null,"code":"import _slicedToArray from\"/Users/adm5/Desktop/recipe-2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{Nav,Logo,Hamburger,MenuLink,Menu}from\"./NavbarStyles\";//  import { ExternalLink } from \"react-external-link\";\n// import { GiHamburgerMenu } from \"react-icons/gi\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Navbar=function Navbar(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];return/*#__PURE__*/_jsxs(Nav,{children:[/*#__PURE__*/_jsxs(Logo,{to:\"/home\",children:[/*#__PURE__*/_jsx(\"i\",{children:\"SERDAR \"}),/*#__PURE__*/_jsx(\"span\",{children:\"Recipe-app\"})]}),/*#__PURE__*/_jsxs(Hamburger,{onClick:function onClick(){setIsOpen(!isOpen);},children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsxs(Menu,{osman:isOpen,children:[/*#__PURE__*/_jsx(MenuLink,{onClick:function onClick(){setIsOpen(!isOpen);},to:\"/about\",children:\"About\"}),/*#__PURE__*/_jsx(MenuLink,{to:\"/github\",children:\"Github\"}),/*#__PURE__*/_jsx(MenuLink,{onClick:function onClick(){setIsOpen(!isOpen);},onMouseUp:function onMouseUp(){return sessionStorage.clear();},to:\"/\",children:\"Logout\"})]})]});};export default Navbar;","map":{"version":3,"sources":["/Users/adm5/Desktop/recipe-2/src/components/navbar/Navbar.jsx"],"names":["React","useState","Nav","Logo","Hamburger","MenuLink","Menu","Navbar","isOpen","setIsOpen","sessionStorage","clear"],"mappings":"kHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,GAAT,CAAcC,IAAd,CAAoBC,SAApB,CAA+BC,QAA/B,CAAyCC,IAAzC,KAAqD,gBAArD,CACA;AACA;wFACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CAEnB,cAA4BN,QAAQ,CAAC,KAAD,CAApC,wCAAOO,MAAP,eAAeC,SAAf,eAEA,mBACE,MAAC,GAAD,yBACE,MAAC,IAAD,EAAO,EAAE,CAAC,OAAV,wBACE,mBAAI,SAAJ,EADF,cAEE,oCAFF,GADF,cAME,MAAC,SAAD,EAAW,OAAO,CAAE,kBAAI,CAACA,SAAS,CAAC,CAACD,MAAF,CAAT,CAAmB,CAA5C,wBACE,eADF,cAEE,eAFF,cAGE,eAHF,GANF,cAcE,MAAC,IAAD,EAAM,KAAK,CAAIA,MAAf,wBACE,KAAC,QAAD,EAAU,OAAO,CAAE,kBAAI,CAACC,SAAS,CAAC,CAACD,MAAF,CAAT,CAAmB,CAA3C,CAA6C,EAAE,CAAC,QAAhD,mBADF,cAEE,KAAC,QAAD,EAAU,EAAE,CAAC,SAAb,oBAFF,cAGE,KAAC,QAAD,EACA,OAAO,CAAE,kBAAI,CAACC,SAAS,CAAC,CAACD,MAAF,CAAT,CAAmB,CADjC,CAEA,SAAS,CAAE,2BAAIE,CAAAA,cAAc,CAACC,KAAf,EAAJ,EAFX,CAIA,EAAE,CAAC,GAJH,oBAHF,GAdF,GADF,CAkCD,CAtCD,CAwCA,cAAeJ,CAAAA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Nav, Logo, Hamburger, MenuLink, Menu } from \"./NavbarStyles\";\n//  import { ExternalLink } from \"react-external-link\";\n// import { GiHamburgerMenu } from \"react-icons/gi\";\nconst Navbar = () => {\n\n  const [isOpen, setIsOpen] = useState(false);\n \n  return (\n    <Nav>\n      <Logo  to=\"/home\">\n        <i>{\"SERDAR \"}</i>\n        <span>Recipe-app</span>\n      </Logo>\n\n      <Hamburger onClick={()=>{setIsOpen(!isOpen)}}>\n        <span />\n        <span />\n        <span />\n        {/* <GiHamburgerMenu/> */}\n\n      </Hamburger>\n\n      <Menu osman = {isOpen} >\n        <MenuLink onClick={()=>{setIsOpen(!isOpen)}} to=\"/about\" >About</MenuLink>\n        <MenuLink to=\"/github\" >Github</MenuLink>\n        <MenuLink \n        onClick={()=>{setIsOpen(!isOpen)}}\n        onMouseUp={()=>sessionStorage.clear()}\n        \n        to=\"/\" \n        \n        \n        \n        >Logout</MenuLink>\n\n      </Menu>\n     \n\n      \n    </Nav>\n  );\n};\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}