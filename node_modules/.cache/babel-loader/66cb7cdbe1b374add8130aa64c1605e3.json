{"ast":null,"code":"var _jsxFileName = \"/Users/adm5/Desktop/recipe-2/src/components/header/Form.jsx\";\nimport React from \"react\";\nimport { FormContainer, FoodInput, Button, Select } from \"./HeaderStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  let {\n    setQuery,\n    getData,\n    mealTypes,\n    setMeal\n  } = _ref;\n\n  const handleSubmit = e => {\n    e.preventDefault(); //  Normal şartlarda search linkine tıklandığında, form gönderilir, (breakfast tıklanmış gibi). biz aşağıdaki şekilde bir yapı kullanırsak ve tıklanma olayında e.preventDefault(); dersek  nesnenin o anki işlevini iptal edip devamında kod varsa işlemeye devam edecektir alttaki örneğimizde görüldüğü gibi e.preventDefault() satırından sonra ki kod satırlarına geçer\n\n    getData(); // mantıken buraya yazılmalı, butona da yazarsak  api yi 2 kere çağırmış oluyor. console da burası açıkken bak\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /* 3 arama kutusunun toplandığı kutu */\n    _jsxDEV(FormContainer, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FoodInput, {\n        type: \"text\",\n        placeholder: \"Search\",\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\" // onClick={getData} yazarsak 2 kere veri getirir. zaten bu buton submit işlemi yapacak ve form un onsubmit ini tetikleyecek\n        ,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        name: \"mealTypes\",\n        id: \"mealTypes\",\n        onChange: e => setMeal(e.target.value),\n        children: mealTypes.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.toLowerCase(),\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/adm5/Desktop/recipe-2/src/components/header/Form.jsx"],"names":["React","FormContainer","FoodInput","Button","Select","Form","setQuery","getData","mealTypes","setMeal","handleSubmit","e","preventDefault","target","value","map","item","index","toLowerCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,MAAnC,EAA2CC,MAA3C,QAAyD,gBAAzD;;;AAEA,MAAMC,IAAI,GAAG,QAA+C;AAAA,MAA9C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,SAArB;AAAgCC,IAAAA;AAAhC,GAA8C;;AAC1D,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF,GAD0B,CAE1B;;AACAL,IAAAA,OAAO,GAHmB,CAK1B;AACD,GAND;;AAQA;AAAA;;AACE;AACA,YAAC,aAAD;AAAe,MAAA,QAAQ,EAAEG,YAAzB;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,QAFd;AAGE,QAAA,QAAQ,EAAGC,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACE,MAAF,CAASC,KAAV;AAH3B;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAeE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,EAAE,EAAC,WAFL;AAGE,QAAA,QAAQ,EAAGH,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAH1B;AAAA,kBAMGN,SAAS,CAACO,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAoB,UAAA,KAAK,EAAED,IAAI,CAACE,WAAL,EAA3B;AAAA,oBACGF;AADH,WAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,gBADD;AANH;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AA+BD,CAxCD;;KAAMZ,I;AA0CN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { FormContainer, FoodInput, Button, Select } from \"./HeaderStyles\";\n\nconst Form = ({ setQuery, getData, mealTypes, setMeal }) => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //  Normal şartlarda search linkine tıklandığında, form gönderilir, (breakfast tıklanmış gibi). biz aşağıdaki şekilde bir yapı kullanırsak ve tıklanma olayında e.preventDefault(); dersek  nesnenin o anki işlevini iptal edip devamında kod varsa işlemeye devam edecektir alttaki örneğimizde görüldüğü gibi e.preventDefault() satırından sonra ki kod satırlarına geçer\n    getData();\n\n    // mantıken buraya yazılmalı, butona da yazarsak  api yi 2 kere çağırmış oluyor. console da burası açıkken bak\n  };\n\n  return (\n    /* 3 arama kutusunun toplandığı kutu */\n    <FormContainer onSubmit={handleSubmit}>\n      <FoodInput\n        type=\"text\"\n        placeholder=\"Search\"\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      {/* arama yapılacak ürünün yazıldığı input */}\n      <Button\n        type=\"submit\"\n\n        // onClick={getData} yazarsak 2 kere veri getirir. zaten bu buton submit işlemi yapacak ve form un onsubmit ini tetikleyecek\n      >\n        Search\n      </Button>\n      {/* ya butona tıklayınca getdata çalıştırsın ya form u handlesubmit e yolla, butonu handlesubmit e yollasanda olur */}\n      <Select\n        name=\"mealTypes\"\n        id=\"mealTypes\"\n        onChange={(e) => setMeal(e.target.value)}\n      >\n        {/* onChange ile setMeal e attım option la browser da göstereceğiz */}\n        {mealTypes.map((item, index) => (\n          <option key={index} value={item.toLowerCase()}>\n            {item}\n          </option>\n        ))}\n      </Select>\n    </FormContainer>\n  );\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}